{
 "nodes": [
  {
   "id": 0,
   "xCoordinate": 745.29410335316561,
   "yCoordinate": 238.82352831223437,
   "output": {}
  },
  {
   "id": 1,
   "xCoordinate": -145.76470619650442,
   "yCoordinate": 79.058821487427,
   "input": {
    "type": "INPUT_TYPE_UV"
   }
  },
  {
   "id": 2,
   "xCoordinate": 172.11764698028571,
   "yCoordinate": 12.352943296993217,
   "valueNoise": {
    "scale": 104
   }
  },
  {
   "id": 3,
   "xCoordinate": 480.11760127124182,
   "yCoordinate": 147.4117506476025,
   "floatOp": {
    "op": "OP_STEP"
   }
  },
  {
   "id": 4,
   "xCoordinate": 171.89363049612797,
   "yCoordinate": 505.6930939762936,
   "perlinNoise": {
    "scale": 50
   }
  }
 ],
 "connections": [
  {
   "id": 1,
   "fromNodeId": 1,
   "fromPortIndex": 0,
   "toNodeId": 2,
   "toPortIndex": 0
  },
  {
   "id": 2,
   "fromNodeId": 1,
   "fromPortIndex": 0,
   "toNodeId": 4,
   "toPortIndex": 0
  },
  {
   "id": 3,
   "fromNodeId": 2,
   "fromPortIndex": 0,
   "toNodeId": 3,
   "toPortIndex": 0
  },
  {
   "id": 4,
   "fromNodeId": 4,
   "fromPortIndex": 0,
   "toNodeId": 3,
   "toPortIndex": 1
  },
  {
   "id": 5,
   "fromNodeId": 3,
   "fromPortIndex": 0,
   "toNodeId": 0,
   "toPortIndex": 0
  }
 ],
 "fragmentShaderCode": "in vec2 FragCoord;\nuniform float uTime;\nfloat noise_random_value(vec2 uv) {\n\treturn fract(sin(dot(uv, vec2(12.9898, 78.233)))*43758.5453);\n}\n\nfloat noise_interpolate(float a, float b, float t) {\n\treturn (1.0-t)*a + (t*b);\n}\n\nfloat value_noise(vec2 uv) {\n\tvec2 i = floor(uv);\n\tvec2 f = fract(uv);\n\tf = f * f * (3.0 - 2.0 * f);\n\t\n\tuv = abs(fract(uv) - 0.5);\n\tvec2 c0 = i + vec2(0.0, 0.0);\n\tvec2 c1 = i + vec2(1.0, 0.0);\n\tvec2 c2 = i + vec2(0.0, 1.0);\n\tvec2 c3 = i + vec2(1.0, 1.0);\n\tfloat r0 = noise_random_value(c0);\n\tfloat r1 = noise_random_value(c1);\n\tfloat r2 = noise_random_value(c2);\n\tfloat r3 = noise_random_value(c3);\n\t\n\tfloat bottom_of_grid = noise_interpolate(r0, r1, f.x);\n\tfloat top_of_grid = noise_interpolate(r2, r3, f.x);\n\tfloat t = noise_interpolate(bottom_of_grid, top_of_grid, f.y);\n\treturn t;\n}\n\nvoid generate_value_noise_float(vec2 uv, float scale, out float out_buffer) {\n\tfloat t = 0.0;\n\t\n\tfloat freq = pow(2.0, float(0));\n\tfloat amp = pow(0.5, float(3-0));\n\tt += value_noise(vec2(uv.x*scale/freq, uv.y*scale/freq))*amp;\n\t\n\tfreq = pow(2.0, float(1));\n\tamp = pow(0.5, float(3-1));\n\tt += value_noise(vec2(uv.x*scale/freq, uv.y*scale/freq))*amp;\n\t\n\tfreq = pow(2.0, float(2));\n\tamp = pow(0.5, float(3-2));\n\tt += value_noise(vec2(uv.x*scale/freq, uv.y*scale/freq))*amp;\n\t\n\tout_buffer = t;\n}\n\nvec2 perlin_noise_dir(vec2 p) {\n\tp = mod(p, 289.0);\n\t\n\tfloat x = mod((34.0 * p.x + 1.0) * p.x, 289.0) + p.y;\n\t\n\tx = mod((34.0 * x + 1.0) * x, 289.0);\n\t\n\tx = fract(x / 41.0) * 2.0 - 1.0;\n\t\n\treturn normalize(vec2(x - floor(x + 0.5), abs(x) - 0.5));\n}\n\nfloat perlin_noise(vec2 p) {\n\tvec2 ip = floor(p);\n\tvec2 fp = fract(p);\n\tfloat d00 = dot(perlin_noise_dir(ip), fp);\n\tfloat d01 = dot(perlin_noise_dir(ip + vec2(0, 1)), fp - vec2(0, 1));\n\tfloat d10 = dot(perlin_noise_dir(ip + vec2(1, 0)), fp - vec2(1, 0));\n\tfloat d11 = dot(perlin_noise_dir(ip + vec2(1, 1)), fp - vec2(1, 1));\n\tfp = fp * fp * fp * (fp * (fp * 6.0 - 15.0) + 10.0);\n\t\n\treturn mix(mix(d00, d01, fp.y), mix(d10, d11, fp.y), fp.x);\n}\n\nvoid generate_perlin_noise_float(vec2 uv, float scale, out float out_buffer) {\n\tout_buffer = perlin_noise(uv * scale) + 0.5;\n}\n\nout vec4 FragColor;\n\nvoid main() {\n// Input:1\n\tvec2 var_from_n1_p0 = FragCoord;\n\n\n// ValueNoise:2\n\t// Value Noise\n\tfloat out_buffer_n2 = 0.0;\n\tgenerate_value_noise_float(var_from_n1_p0, 104.000000, out_buffer_n2);\n\tvec4 var_from_n2_p0 = vec4(out_buffer_n2, out_buffer_n2, out_buffer_n2, 1.0);\n\t\n\n\n// PerlinNoise:4\n\t// Perlin Noise\n\tfloat out_buffer_n4 = 0.0;\n\tgenerate_perlin_noise_float(var_from_n1_p0, 50.000000, out_buffer_n4);\n\tvec4 var_from_n4_p0 = vec4(out_buffer_n4, out_buffer_n4, out_buffer_n4, 1.0);\n\t\n\n\n// FloatOp:3\n\tfloat var_from_n3_p0 = step(var_from_n2_p0.x, var_from_n4_p0.x);\n\n\n// Output:0\n\tFragColor = vec4(var_from_n3_p0);\n\n\n}\n\n"
}
