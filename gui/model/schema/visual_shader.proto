syntax = "proto3";
package gui.model.schema;

import "visual_shader_nodes.proto";

// Check https://protobuf.dev/programming-guides/best-practices/ before adding new features

message VisualShader {
    message VisualShaderNode {
        optional int32 id = 1;
        
        optional double x_coordinate = 2;
        optional double y_coordinate = 3;
        
        oneof node_type {
            VisualShaderNodeInput input = 4;
            VisualShaderNodeOutput output = 5;

            /*************************************/
            /* CONSTANTS                         */
            /*************************************/
            VisualShaderNodeFloatConstant float_constant = 6;
            VisualShaderNodeIntConstant int_constant = 7;
            VisualShaderNodeUIntConstant uint_constant = 8;
            VisualShaderNodeBooleanConstant boolean_constant = 9;
            VisualShaderNodeColorConstant color_constant = 10;
            VisualShaderNodeVec2Constant vec2_constant = 11;
            VisualShaderNodeVec3Constant vec3_constant = 12;
            VisualShaderNodeVec4Constant vec4_constant = 13;
            
            /*************************************/
            /* OPERATORS                         */
            /*************************************/
            VisualShaderNodeFloatOp float_op = 14;
            VisualShaderNodeIntOp int_op = 15;
            VisualShaderNodeUIntOp uint_op = 16;
            VisualShaderNodeVectorOp vector_op = 17;

            /*************************************/
            /* Funcs Node                        */
            /*************************************/
            VisualShaderNodeFloatFunc float_func = 18;
            VisualShaderNodeIntFunc int_func = 19;
            VisualShaderNodeUIntFunc uint_func = 20;
            VisualShaderNodeVectorFunc vector_func = 21;

            /*************************************/
            /* NOISE                             */
            /*************************************/
            VisualShaderNodeValueNoise value_noise = 22;
            VisualShaderNodePerlinNoise perlin_noise = 23;
            VisualShaderNodeVoronoiNoise voronoi_noise = 24;
        }
    }
    
    message VisualShaderConnection {
        optional int32 id = 1;
        optional int32 from_node_id = 2;
        optional int32 from_port_index = 3;
        optional int32 to_node_id = 4;
        optional int32 to_port_index = 5;
    }
    
    optional int32 id = 1;
    repeated VisualShaderNode nodes = 2;
    repeated VisualShaderConnection connections = 3;
    optional string fragment_shader_code = 4;
}
